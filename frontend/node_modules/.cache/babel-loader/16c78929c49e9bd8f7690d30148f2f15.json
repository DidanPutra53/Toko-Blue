{"ast":null,"code":"import _slicedToArray from\"E:/document/e-commerce/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{useAlert}from'react-alert';import{useDispatch,useSelector}from'react-redux';import{resetPassword,clearError}from'../../actions/userAction';import MetaData from'../layout/MetaData';import{Loginbg,Logobg}from'../images/Images';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewPassword=function NewPassword(_ref){var history=_ref.history,match=_ref.match;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),confirmPassword=_useState4[0],setConfirmPassword=_useState4[1];var alert=useAlert();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.forgotPassword;}),error=_useSelector.error,success=_useSelector.success;useEffect(function(){if(error){alert.error(error);dispatch(clearError());}if(success){alert.success('Password telah diubah');history.push('/Masuk');}},[dispatch,alert,error,success,history]);var submitHandler=function submitHandler(e){e.preventDefault();var formData=new FormData();formData.set('password',password);formData.set('confrimPassword',confirmPassword);dispatch(resetPassword(match.params.token,formData));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:'Lupa Password'}),/*#__PURE__*/_jsxs(\"div\",{className:\"Login-Content\",children:[/*#__PURE__*/_jsx(\"img\",{src:Loginbg,className:\"loginbg\",alt:\"masuk\"}),/*#__PURE__*/_jsx(\"div\",{className:\"lobang\",children:/*#__PURE__*/_jsx(\"div\",{className:\"kiri\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"login-page\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"img\",{src:Logobg,alt:\"logo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"E-mail\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password_field\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},label:\"password\",placeholder:\"password baru\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"E-mail\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password_field\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);},label:\"E-mail\",placeholder:\"password baru\"})]})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"button-klik\",type:\"submit\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Password Baru\"})})]})})})]})]});};export default NewPassword;","map":{"version":3,"sources":["E:/document/e-commerce/frontend/src/component/user/NewPassword.js"],"names":["React","Fragment","useState","useEffect","useAlert","useDispatch","useSelector","resetPassword","clearError","MetaData","Loginbg","Logobg","NewPassword","history","match","password","setPassword","confirmPassword","setConfirmPassword","alert","dispatch","state","forgotPassword","error","success","push","submitHandler","e","preventDefault","formData","FormData","set","params","token","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { resetPassword, clearError } from '../../actions/userAction'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { Loginbg, Logobg } from '../images/Images'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearError())\r\n        }\r\n        if (success) {\r\n            alert.success('Password telah diubah')\r\n            history.push('/Masuk')\r\n        }\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confrimPassword', confirmPassword);\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Lupa Password'} />\r\n            <div className=\"Login-Content\">\r\n                <img src={Loginbg} className=\"loginbg\" alt=\"masuk\" />\r\n                <div className=\"lobang\">\r\n                    <div className=\"kiri\">\r\n                        <form className=\"login-page\" onSubmit={submitHandler}>\r\n                            <img src={Logobg} alt=\"logo\" />\r\n                            <div className=\"input\">\r\n                                <div className=\"E-mail\">\r\n                                    <label htmlFor=\"password_field\">\r\n                                        Password\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        label=\"password\"\r\n                                        placeholder=\"password baru\"\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"E-mail\">\r\n                                    <label htmlFor=\"password_field\">\r\n                                        Confirm Password\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                        label=\"E-mail\"\r\n                                        placeholder=\"password baru\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"button-klik\" type=\"submit\" >\r\n                                <button>\r\n                                    Password Baru\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n"]},"metadata":{},"sourceType":"module"}