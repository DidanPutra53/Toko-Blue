{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coegb\\\\Documents\\\\e-commerce\\\\frontend\\\\src\\\\component\\\\user\\\\UpdatePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updatePassword, clearError } from '../../actions/userAction';\nimport MetaData from '../layout/MetaData';\nimport { userConstants } from '../../constants/userConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePassword = () => {\n  _s();\n\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearError());\n    }\n\n    if (isUpdated) {\n      alert.success('Update User Berhasil');\n      dispatch(loadUser());\n      history.push('/Profile');\n      dispatch({\n        type: userConstants.UPDATE_PROFILE_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('avatar', avatar);\n    dispatch(updateProfile(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePassword, \"dW/1G5fcKRQDvuf7TZY7h+ai5K4=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdatePassword;\nexport default UpdatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/component/user/UpdatePassword.js"],"names":["React","Fragment","useState","useEffect","Link","useAlert","useDispatch","useSelector","updatePassword","clearError","MetaData","userConstants","UpdatePassword","oldPassword","setOldPassword","newPassword","setNewPassword","alert","dispatch","user","state","auth","error","isUpdated","loading","setName","name","setEmail","email","setAvatarPreview","avatar","url","success","loadUser","history","push","type","UPDATE_PROFILE_RESET","submitHandler","e","preventDefault","formData","FormData","set","updateProfile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,0BAA3C;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,SAASC,aAAT,QAA8B,8BAA9B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMe,KAAK,GAAGZ,QAAQ,EAAtB;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAAWZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA5B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAgCjB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAjD;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,IAAJ,EAAU;AACNM,MAAAA,OAAO,CAACN,IAAI,CAACO,IAAN,CAAP;AACAC,MAAAA,QAAQ,CAACR,IAAI,CAACS,KAAN,CAAR;AACAC,MAAAA,gBAAgB,CAACV,IAAI,CAACW,MAAL,CAAYC,GAAb,CAAhB;AACH;;AACD,QAAIT,KAAJ,EAAW;AACPL,MAAAA,KAAK,CAACK,KAAN,CAAYA,KAAZ;AACAJ,MAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACH;;AACD,QAAIc,SAAJ,EAAe;AACXN,MAAAA,KAAK,CAACe,OAAN,CAAc,sBAAd;AACAd,MAAAA,QAAQ,CAACe,QAAQ,EAAT,CAAR;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AACAjB,MAAAA,QAAQ,CAAC;AACLkB,QAAAA,IAAI,EAAEzB,aAAa,CAAC0B;AADf,OAAD,CAAR;AAGH;AACJ,GAlBQ,EAkBN,CAACnB,QAAD,EAAWD,KAAX,EAAkBK,KAAlB,EAAyBY,OAAzB,EAAkCX,SAAlC,CAlBM,CAAT;;AAoBA,QAAMe,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,GAAT,CAAa,MAAb,EAAqBjB,IAArB;AACAe,IAAAA,QAAQ,CAACE,GAAT,CAAa,OAAb,EAAsBf,KAAtB;AACAa,IAAAA,QAAQ,CAACE,GAAT,CAAa,QAAb,EAAuBb,MAAvB;AACAZ,IAAAA,QAAQ,CAAC0B,aAAa,CAACH,QAAD,CAAd,CAAR;AACH,GAPD;;AASA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7CD;;GAAM7B,c;UAKYP,Q,EACGC,W,EAEAC,W,EACqBA,W;;;KATpCK,c;AA+CN,eAAeA,cAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { updatePassword, clearError } from '../../actions/userAction'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { userConstants } from '../../constants/userConstant'\r\n\r\nconst UpdatePassword = () => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearError())\r\n        }\r\n        if (isUpdated) {\r\n            alert.success('Update User Berhasil')\r\n            dispatch(loadUser())\r\n            history.push('/Profile')\r\n            dispatch({\r\n                type: userConstants.UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n"]},"metadata":{},"sourceType":"module"}