{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, getSingleProductReducer } from './reducers/product.Reducers';\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { newOrderReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: getSingleProductReducer,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : []\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","getSingleProductReducer","authReducer","userReducer","forgotPasswordReducer","cartReducer","newOrderReducer","reducer","products","productDetails","auth","user","forgotPassword","cart","newOrder","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,EAA0BC,uBAA1B,QAAyD,6BAAzD;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,qBAAnC,QAAgE,wBAAhE;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,QAAQ,EAAER,eADkB;AAE5BS,EAAAA,cAAc,EAAER,uBAFY;AAG5BS,EAAAA,IAAI,EAAER,WAHsB;AAI5BS,EAAAA,IAAI,EAAER,WAJsB;AAK5BS,EAAAA,cAAc,EAAER,qBALY;AAM5BS,EAAAA,IAAI,EAAER,WANsB;AAO5BS,EAAAA,QAAQ,EAAER;AAPkB,CAAD,CAA/B;AAUA,IAAIS,YAAY,GAAG;AACfF,EAAAA,IAAI,EAAE;AACFG,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADK,GAEL,EAHJ;AAIFG,IAAAA,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADQ,GAER;AANJ;AADS,CAAnB;AAWA,MAAMI,UAAU,GAAG,CAACxB,KAAD,CAAnB;AACA,MAAMyB,KAAK,GAAG5B,WAAW,CAACY,OAAD,EAAUQ,YAAV,EAAwBhB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productsReducer, getSingleProductReducer } from './reducers/product.Reducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { newOrderReducer } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: getSingleProductReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n})\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : []\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}