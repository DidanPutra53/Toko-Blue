{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coegb\\\\Documents\\\\e-commerce\\\\frontend\\\\src\\\\component\\\\user\\\\UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile, loadUser, clearError } from '../../actions/userAction';\nimport MetaData from '../layout/MetaData';\nimport { userConstants } from '../../constants/userConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = ({\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState('/images/download.jpg');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearError());\n    }\n\n    if (isUpdated) {\n      alert.success('Update User Berhasil');\n      dispatch(loadUser());\n      history.push('/Profile');\n      dispatch({\n        type: userConstants.UPDATE_PROFILE_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('avatar', avatar);\n    dispatch(updateProfile(formData));\n  };\n\n  const onChange = e => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Update Profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Profile\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upper-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarPreview,\n          alt: \"Avatar Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-profile\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"name-email-update\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Nama Pengguna\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"name\",\n                className: \"form-control\",\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"name-email-update\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"Email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarPreview,\n          alt: \"Avatar Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-file\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"avatar\",\n              className: \"custom-file-input\",\n              id: \"customFile\",\n              accept: \"iamges/*\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"custom-file-label\",\n              htmlFor: \"customFile\",\n              children: \"Choose Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"simpan-profile\",\n            children: \"Simpan Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProfile, \"YEfeb5Fh/WqxWt1p3zyR+0pjqyY=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/component/user/UpdateProfile.js"],"names":["React","Fragment","useState","useEffect","Link","useAlert","useDispatch","useSelector","updateProfile","loadUser","clearError","MetaData","userConstants","UpdateProfile","history","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","alert","dispatch","user","state","auth","error","isUpdated","loading","url","success","push","type","UPDATE_PROFILE_RESET","submitHandler","e","preventDefault","formData","FormData","set","onChange","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { updateProfile, loadUser, clearError } from '../../actions/userAction'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { userConstants } from '../../constants/userConstant'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/download.jpg')\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearError())\r\n        }\r\n        if (isUpdated) {\r\n            alert.success('Update User Berhasil')\r\n            dispatch(loadUser())\r\n            history.push('/Profile')\r\n            dispatch({\r\n                type: userConstants.UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n            <form className=\"Profile\" onSubmit={submitHandler}>\r\n                <div className=\"upper-profile\">\r\n                    <img\r\n                        src={avatarPreview}\r\n                        alt='Avatar Preview'\r\n                    />\r\n                </div>\r\n                <div className=\"content-profile\">\r\n                    <div className=\"list-profile\">\r\n                        <ul>\r\n                            <li className=\"name-email-update\">\r\n                                <label htmlFor=\"name\">Nama Pengguna</label>\r\n                                <input\r\n                                    type=\"name\"\r\n                                    className=\"form-control\"\r\n                                    name='name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </li>\r\n                            <hr />\r\n                            <li className=\"name-email-update\">\r\n                                <label htmlFor=\"Email\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name='email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sidebar-profile\">\r\n                    <img\r\n                        src={avatarPreview}\r\n                        alt='Avatar Preview'\r\n                    />\r\n                    <div className=\"control-profile\">\r\n                        <div className='custom-file'>\r\n                            <input\r\n                                type='file'\r\n                                name='avatar'\r\n                                className='custom-file-input'\r\n                                id='customFile'\r\n                                accept=\"iamges/*\"\r\n                                onChange={onChange}\r\n                            />\r\n                            <label className='custom-file-label' htmlFor='customFile'>\r\n                                Choose Avatar\r\n                            </label>\r\n                        </div>\r\n                        <button className=\"simpan-profile\">\r\n                            Simpan Profile\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n"]},"metadata":{},"sourceType":"module"}