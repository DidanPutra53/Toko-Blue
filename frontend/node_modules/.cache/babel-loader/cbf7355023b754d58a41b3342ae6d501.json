{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coegb\\\\Documents\\\\e-commerce\\\\frontend\\\\src\\\\component\\\\admin\\\\UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, clearError, deleteUser } from '../../actions/userAction';\nimport { userConstants } from '../../constants/userConstant';\nimport { FiTrash, FiEdit } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = ({\n  history\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    isDeleted\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearError());\n    }\n\n    if (isDeleted) {\n      alert.success('User deleted successfully');\n      history.push('/admin/users');\n      dispatch({\n        type: userConstants.DELETE_ORDER_RESET\n      });\n    }\n  }, [dispatch, alert, error, history, isDeleted]);\n\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'User ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        actions: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-edit-btn\",\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              border: \"none\",\n              backgroundColor: \"transparent\"\n            },\n            className: \"trash-user\",\n            onClick: () => deleteUserHandler(user._id),\n            children: /*#__PURE__*/_jsxDEV(FiTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list-admin\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-dashboard\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alluser\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsersList, \"Y04wUDJmFcgGjJIIVQw3/P3HcoI=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/component/admin/UsersList.js"],"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","allUsers","clearError","deleteUser","userConstants","FiTrash","FiEdit","UsersList","history","alert","dispatch","loading","error","users","state","isDeleted","user","success","push","type","DELETE_ORDER_RESET","deleteUserHandler","id","setUsers","data","columns","label","field","sort","rows","forEach","_id","name","email","role","actions","display","justifyContent","border","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allUsers, clearError, deleteUser } from '../../actions/userAction'\r\nimport { userConstants } from '../../constants/userConstant'\r\n\r\nimport { FiTrash, FiEdit } from \"react-icons/fi\";\r\n\r\nconst UsersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearError())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('User deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: userConstants.DELETE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isDeleted])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n                actions:\r\n                    <div className=\"delete-edit-btn\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <Link to={`/admin/user/${user._id}`}>\r\n                            <FiEdit />\r\n                        </Link>\r\n                        <button style={{ border: \"none\", backgroundColor: \"transparent\" }} className=\"trash-user\" onClick={() => deleteUserHandler(user._id)}>\r\n                            <FiTrash />\r\n                        </button>\r\n                    </div>\r\n            })\r\n        })\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"product-list-admin\">\r\n                <div className=\"sidebar-dashboard\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"alluser\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n"]},"metadata":{},"sourceType":"module"}