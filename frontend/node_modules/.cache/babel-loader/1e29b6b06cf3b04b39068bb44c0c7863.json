{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{productsReducer,getSingleProductReducer,newProductReducer,productReducer}from'./reducers/product.Reducers';import{authReducer,userReducer,forgotPasswordReducer,allUsersReducer}from'./reducers/userReducer';import{cartReducer}from'./reducers/cartReducer';import{newOrderReducer,myOrdersReducer,orderDetailsReducer,allOrderReducer,orderReducer}from'./reducers/orderReducer';var reducer=combineReducers({products:productsReducer,productDetails:getSingleProductReducer,newProduct:newProductReducer,product:productReducer,auth:authReducer,user:userReducer,allUsers:allUsersReducer,forgotPassword:forgotPasswordReducer,cart:cartReducer,newOrder:newOrderReducer,allOrder:allOrderReducer,myOrders:myOrdersReducer,orderDetails:orderDetailsReducer,order:orderReducer});var initialState={cart:{cartItems:localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[],shippingInfo:localStorage.getItem('shippingInfo')?JSON.parse(localStorage.getItem('shippingInfo')):[]}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","getSingleProductReducer","newProductReducer","productReducer","authReducer","userReducer","forgotPasswordReducer","allUsersReducer","cartReducer","newOrderReducer","myOrdersReducer","orderDetailsReducer","allOrderReducer","orderReducer","reducer","products","productDetails","newProduct","product","auth","user","allUsers","forgotPassword","cart","newOrder","allOrder","myOrders","orderDetails","order","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,eAAT,CAA0BC,uBAA1B,CAAmDC,iBAAnD,CAAsEC,cAAtE,KAA4F,6BAA5F,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,qBAAnC,CAA0DC,eAA1D,KAAiF,wBAAjF,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,eAAT,CAA0BC,eAA1B,CAA2CC,mBAA3C,CAAgEC,eAAhE,CAAiFC,YAAjF,KAAqG,yBAArG,CAEA,GAAMC,CAAAA,OAAO,CAAGlB,eAAe,CAAC,CAC5BmB,QAAQ,CAAEf,eADkB,CAE5BgB,cAAc,CAAEf,uBAFY,CAG5BgB,UAAU,CAAEf,iBAHgB,CAI5BgB,OAAO,CAAEf,cAJmB,CAK5BgB,IAAI,CAAEf,WALsB,CAM5BgB,IAAI,CAAEf,WANsB,CAO5BgB,QAAQ,CAAEd,eAPkB,CAQ5Be,cAAc,CAAEhB,qBARY,CAS5BiB,IAAI,CAAEf,WATsB,CAU5BgB,QAAQ,CAAEf,eAVkB,CAW5BgB,QAAQ,CAAEb,eAXkB,CAY5Bc,QAAQ,CAAEhB,eAZkB,CAa5BiB,YAAY,CAAEhB,mBAbc,CAc5BiB,KAAK,CAAEf,YAdqB,CAAD,CAA/B,CAiBA,GAAIgB,CAAAA,YAAY,CAAG,CACfN,IAAI,CAAE,CACFO,SAAS,CAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADK,CAEL,EAHJ,CAIFG,YAAY,CAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,EACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADQ,CAER,EANJ,CADS,CAAnB,CAWA,GAAMI,CAAAA,UAAU,CAAG,CAACtC,KAAD,CAAnB,CACA,GAAMuC,CAAAA,KAAK,CAAG1C,WAAW,CAACmB,OAAD,CAAUe,YAAV,CAAwB9B,mBAAmB,CAACF,eAAe,MAAf,QAAmBuC,UAAnB,CAAD,CAA3C,CAAzB,CAEA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productsReducer, getSingleProductReducer, newProductReducer, productReducer } from './reducers/product.Reducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer } from './reducers/userReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrderReducer, orderReducer } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: getSingleProductReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    allOrder: allOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer\r\n})\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : []\r\n    }\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}