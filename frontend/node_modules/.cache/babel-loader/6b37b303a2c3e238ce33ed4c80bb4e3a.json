{"ast":null,"code":"import axios from 'axios';\nimport { orderConstant } from \"../constants/orderConstant\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: orderConstant.CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/cart/tambah', order, config);\n    dispatch({\n      type: orderConstant.CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: orderConstant.CREATE_ORDER_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: orderConstant.MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/orders/me');\n    dispatch({\n      type: orderConstant.MY_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: orderConstant.MY_ORDERS_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getOrderDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: orderConstant.ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/cart/${id}`);\n    dispatch({\n      type: orderConstant.ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: orderConstant.ORDER_DETAILS_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: orderConstant.CLEAR_ERROR\n  });\n};","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/actions/orderAction.js"],"names":["axios","orderConstant","createOrder","order","dispatch","getState","type","CREATE_ORDER_REQUEST","config","headers","data","post","CREATE_ORDER_SUCCESS","payload","error","CREATE_ORDER_FAILURE","response","message","myOrders","MY_ORDERS_REQUEST","get","MY_ORDERS_SUCCESS","MY_ORDERS_FAILURE","getOrderDetails","id","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILURE","clearErrors","CLEAR_ERROR"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,aAAa,CAACM;AAAtB,KAAD,CAAR;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACW,IAAN,CAAW,qBAAX,EAAkCR,KAAlC,EAAyCK,MAAzC,CAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,aAAa,CAACW,oBADf;AAELC,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAdD,CAcE,OAAOI,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,aAAa,CAACc,oBADf;AAELF,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO;AAFxB,KAAD,CAAR;AAIH;AACJ,CArBM;AAuBP,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOd,QAAP,IAAoB;AAC9C,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,aAAa,CAACkB;AAAtB,KAAD,CAAR;AAEA,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACoB,GAAN,CAAU,mBAAV,CAAvB;AAEAhB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,aAAa,CAACoB,iBADf;AAELR,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOI,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,aAAa,CAACqB,iBADf;AAELT,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO;AAFxB,KAAD,CAAR;AAIH;AACJ,CAjBM;AAmBP,OAAO,MAAMM,eAAe,GAAIC,EAAD,IAAQ,MAAOpB,QAAP,IAAoB;AACvD,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL,aAAa,CAACwB;AAAtB,KAAD,CAAR;AAEA,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMV,KAAK,CAACoB,GAAN,CAAW,gBAAeI,EAAG,EAA7B,CAAvB;AAEApB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,aAAa,CAACyB,qBADf;AAELb,MAAAA,OAAO,EAAEH,IAAI,CAACP;AAFT,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOW,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,aAAa,CAAC0B,qBADf;AAELd,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO;AAFxB,KAAD,CAAR;AAIH;AACJ,CAjBM;AAmBP,OAAO,MAAMW,WAAW,GAAG,MAAM,MAAOxB,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAAC;AACLE,IAAAA,IAAI,EAAEL,aAAa,CAAC4B;AADf,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import axios from 'axios'\r\nimport { orderConstant } from \"../constants/orderConstant\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: orderConstant.CREATE_ORDER_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/cart/tambah', order, config)\r\n\r\n        dispatch({\r\n            type: orderConstant.CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderConstant.CREATE_ORDER_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: orderConstant.MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/me')\r\n\r\n        dispatch({\r\n            type: orderConstant.MY_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderConstant.MY_ORDERS_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: orderConstant.ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/cart/${id}`)\r\n\r\n        dispatch({\r\n            type: orderConstant.ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: orderConstant.ORDER_DETAILS_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: orderConstant.CLEAR_ERROR\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}