{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, getSingleProductReducer } from './reducers/product.Reducers';\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducer';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: getSingleProductReducer,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer\n});\nlet initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","getSingleProductReducer","authReducer","userReducer","forgotPasswordReducer","reducer","products","productDetails","auth","user","forgotPassword","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,EAA0BC,uBAA1B,QAAyD,6BAAzD;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,qBAAnC,QAAgE,wBAAhE;AAGA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC5BU,EAAAA,QAAQ,EAAEN,eADkB;AAE5BO,EAAAA,cAAc,EAAEN,uBAFY;AAG5BO,EAAAA,IAAI,EAAEN,WAHsB;AAI5BO,EAAAA,IAAI,EAAEN,WAJsB;AAK5BO,EAAAA,cAAc,EAAEN;AALY,CAAD,CAA/B;AAQA,IAAIO,YAAY,GAAG,EAAnB;AAEA,MAAMC,UAAU,GAAG,CAACd,KAAD,CAAnB;AACA,MAAMe,KAAK,GAAGlB,WAAW,CAACU,OAAD,EAAUM,YAAV,EAAwBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productsReducer, getSingleProductReducer } from './reducers/product.Reducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: getSingleProductReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n})\r\n\r\nlet initialState = {}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}