{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coegb\\\\Documents\\\\e-commerce\\\\frontend\\\\src\\\\component\\\\order\\\\ListOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport Loader from '../layout/Loader';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MetaData from '../layout/MetaData';\nimport { myOrders, clearErrors } from '../../actions/orderAction';\nimport { FaRegEye } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListOrders = () => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    order\n  } = useSelector(state => state.myOrder);\n  useEffect(() => {\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, error]);\n\n  const setOrders = () => {\n    const data = {\n      columns: [{\n        label: 'Order ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Num of Items',\n        field: 'numOfItems',\n        sort: 'asc'\n      }, {\n        label: 'Amount',\n        field: 'amount',\n        sort: 'asc'\n      }, {\n        label: 'Status',\n        field: 'status',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc'\n      }],\n      rows: []\n    };\n    order.forEach(order => {\n      data.rows.push({\n        id: order._id,\n        numOfItems: order.orderItems.length,\n        amount: `Rp. ${order.totalPrice}`,\n        status: order.orderStatus && String(order.orderStatus).includes('Delivered') ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }, this),\n        actions: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/Pesanan/${order._id}`,\n          className: \"btn btn-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: /*#__PURE__*/_jsxDEV(FaRegEye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Transaksi Pembelian'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pesanan\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transaksi Pembelian\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n        data: setOrders(),\n        className: \"px-3\",\n        bordered: true,\n        striped: true,\n        hover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListOrders, \"/hGIErSnVizYkjtjJ2OG5i6H8J4=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ListOrders;\nexport default ListOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOrders\");","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/component/order/ListOrders.js"],"names":["React","Fragment","useEffect","Link","MDBDataTable","Loader","useAlert","useDispatch","useSelector","MetaData","myOrders","clearErrors","FaRegEye","ListOrders","alert","dispatch","loading","error","order","state","myOrder","setOrders","data","columns","label","field","sort","rows","forEach","push","id","_id","numOfItems","orderItems","length","amount","totalPrice","status","orderStatus","String","includes","color","actions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,2BAAtC;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA4BV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA7C;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACL,QAAQ,EAAT,CAAR;;AAEA,QAAIO,KAAJ,EAAW;AACPH,MAAAA,KAAK,CAACG,KAAN,CAAYA,KAAZ;AACAF,MAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACH;AACJ,GAPQ,EAON,CAACI,QAAD,EAAWD,KAAX,EAAkBG,KAAlB,CAPM,CAAT;;AASA,QAAMI,SAAS,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAG;AACTC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,UADX;AAEIC,QAAAA,KAAK,EAAE,IAFX;AAGIC,QAAAA,IAAI,EAAE;AAHV,OADK,EAML;AACIF,QAAAA,KAAK,EAAE,cADX;AAEIC,QAAAA,KAAK,EAAE,YAFX;AAGIC,QAAAA,IAAI,EAAE;AAHV,OANK,EAWL;AACIF,QAAAA,KAAK,EAAE,QADX;AAEIC,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,IAAI,EAAE;AAHV,OAXK,EAgBL;AACIF,QAAAA,KAAK,EAAE,QADX;AAEIC,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,IAAI,EAAE;AAHV,OAhBK,EAqBL;AACIF,QAAAA,KAAK,EAAE,SADX;AAEIC,QAAAA,KAAK,EAAE,SAFX;AAGIC,QAAAA,IAAI,EAAE;AAHV,OArBK,CADA;AA4BTC,MAAAA,IAAI,EAAE;AA5BG,KAAb;AA+BAT,IAAAA,KAAK,CAACU,OAAN,CAAcV,KAAK,IAAI;AACnBI,MAAAA,IAAI,CAACK,IAAL,CAAUE,IAAV,CAAe;AACXC,QAAAA,EAAE,EAAEZ,KAAK,CAACa,GADC;AAEXC,QAAAA,UAAU,EAAEd,KAAK,CAACe,UAAN,CAAiBC,MAFlB;AAGXC,QAAAA,MAAM,EAAG,OAAMjB,KAAK,CAACkB,UAAW,EAHrB;AAIXC,QAAAA,MAAM,EAAEnB,KAAK,CAACoB,WAAN,IAAqBC,MAAM,CAACrB,KAAK,CAACoB,WAAP,CAAN,CAA0BE,QAA1B,CAAmC,WAAnC,CAArB,gBACF;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAV;AAAA,oBAA+BvB,KAAK,CAACoB;AAArC;AAAA;AAAA;AAAA;AAAA,gBADE,gBAEF;AAAG,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAAV;AAAA,oBAA6BvB,KAAK,CAACoB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBANK;AAOXI,QAAAA,OAAO,eACH,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWxB,KAAK,CAACa,GAAI,EAAhC;AAAmC,UAAA,SAAS,EAAC,iBAA7C;AAAA,iCACI;AAAA,mCAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARO,OAAf;AAYH,KAbD;AAcA,WAAOT,IAAP;AACH,GA/CD;;AAiDA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQN,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBACH,QAAC,YAAD;AACI,QAAA,IAAI,EAAEK,SAAS,EADnB;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,OAAO,MAJX;AAKI,QAAA,KAAK;AALT;AAAA;AAAA;AAAA;AAAA,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApFD;;GAAMR,U;UAEYP,Q,EACGC,W,EAEiBC,W;;;KALhCK,U;AAsFN,eAAeA,UAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MetaData from '../layout/MetaData';\r\nimport { myOrders, clearErrors } from '../../actions/orderAction';\r\nimport { FaRegEye } from 'react-icons/fa'\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, order } = useSelector(state => state.myOrder)\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders())\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        order.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `Rp. ${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/Pesanan/${order._id}`} className=\"btn btn-primary\">\r\n                        <i><FaRegEye /></i>\r\n                    </Link>\r\n            })\r\n        })\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Transaksi Pembelian'} />\r\n            <div className=\"pesanan\">\r\n                <h1>Transaksi Pembelian</h1>\r\n                {\r\n                    loading ? <Loader /> : (\r\n                        <MDBDataTable\r\n                            data={setOrders()}\r\n                            className=\"px-3\"\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders\r\n"]},"metadata":{},"sourceType":"module"}