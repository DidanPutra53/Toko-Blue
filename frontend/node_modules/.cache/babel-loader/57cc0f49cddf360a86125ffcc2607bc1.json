{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coegb\\\\Documents\\\\e-commerce\\\\frontend\\\\src\\\\component\\\\user\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { forgotPassword, clearError } from '../../actions/userAction';\nimport MetaData from '../layout/MetaData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    loading,\n    message\n  } = useSelector(state => state.forgotPassword);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearError());\n    }\n\n    if (message) {\n      alert.success(message);\n    }\n  }, [dispatch, alert, error, message]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('email', email);\n    dispatch(forgotPassword(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Lupa Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), \"dwsfad\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPassword, \"RmYt4oCoLC1zG2JMsoI+aGCzGps=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/component/user/ForgotPassword.js"],"names":["React","Fragment","useState","useEffect","Link","useAlert","useDispatch","useSelector","forgotPassword","clearError","MetaData","ForgotPassword","email","setEmail","alert","dispatch","error","loading","message","state","success","submitHandler","e","preventDefault","formData","FormData","set"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,0BAA3C;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMY,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA8BX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACX,cAAhB,CAA/C;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,KAAJ,EAAW;AACPF,MAAAA,KAAK,CAACE,KAAN,CAAYA,KAAZ;AACAD,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACH;;AACD,QAAIS,OAAJ,EAAa;AACTJ,MAAAA,KAAK,CAACM,OAAN,CAAcF,OAAd;AACH;AACJ,GARQ,EAQN,CAACH,QAAD,EAAWD,KAAX,EAAkBE,KAAlB,EAAyBE,OAAzB,CARM,CAAT;;AAUA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,GAAT,CAAa,OAAb,EAAsBd,KAAtB;AACAG,IAAAA,QAAQ,CAACP,cAAc,CAACgB,QAAD,CAAf,CAAR;AACH,GALD;;AAQA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjCD;;GAAMb,c;UAIYN,Q,EACGC,W,EAEmBC,W;;;KAPlCI,c;AAmCN,eAAeA,cAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { forgotPassword, clearError } from '../../actions/userAction'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearError())\r\n        }\r\n        if (message) {\r\n            alert.success(message)\r\n        }\r\n    }, [dispatch, alert, error, message])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('email', email);\r\n        dispatch(forgotPassword(formData))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Lupa Password'} />\r\n            dwsfad\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n"]},"metadata":{},"sourceType":"module"}