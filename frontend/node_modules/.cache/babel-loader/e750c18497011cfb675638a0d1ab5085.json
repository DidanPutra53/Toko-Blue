{"ast":null,"code":"import axios from 'axios';\nimport { productConstansts, getSingleProduct } from '../constants/product.Constant'; //get allproducts\n\nexport const getProduct = (keyword = '', category) => async dispatch => {\n  try {\n    dispatch({\n      type: productConstansts.ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/Products?keyword=${keyword}`;\n\n    if (category) {\n      link = `/api/v1/Products?category=${category}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: productConstansts.ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: productConstansts.ALL_PRODUCT_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n}; //get single product\n\nexport const getDetailProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: getSingleProduct.PRODUCT_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/Products/${id}`);\n    dispatch({\n      type: getSingleProduct.PRODUCT_DETAIL_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: getSingleProduct.PRODUCT_DETAIL_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminsProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: productConstansts.ADMIN_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1//admin/Products`);\n    dispatch({\n      type: productConstansts.ADMIN_PRODUCT_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: productConstansts.ADMIN_PRODUCT_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: productConstansts.NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/admin/products/new', productData, config);\n    dispatch({\n      type: productConstansts.NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: productConstansts.NEW_PRODUCT_FAILURE,\n      payload: error.response.data.message\n    });\n  }\n}; //clear error\n\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: productConstansts.CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/actions/product.actions.js"],"names":["axios","productConstansts","getSingleProduct","getProduct","keyword","category","dispatch","type","ALL_PRODUCT_REQUEST","link","data","get","ALL_PRODUCT_SUCCESS","payload","error","ALL_PRODUCT_FAILURE","response","message","getDetailProduct","id","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","product","PRODUCT_DETAIL_FAILURE","getAdminsProducts","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","products","ADMIN_PRODUCT_FAILURE","newProduct","productData","NEW_PRODUCT_REQUEST","config","headers","post","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAILURE","clearError","CLEAR_ERRORS"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { productConstansts, getSingleProduct } from '../constants/product.Constant'\r\n\r\n//get allproducts\r\nexport const getProduct = (keyword = '', category) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: productConstansts.ALL_PRODUCT_REQUEST\r\n        })\r\n\r\n        let link = `/api/v1/Products?keyword=${keyword}`\r\n        if (category) {\r\n            link = `/api/v1/Products?category=${category}`\r\n        }\r\n        const { data } = await axios.get(link)\r\n        dispatch({\r\n            type: productConstansts.ALL_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: productConstansts.ALL_PRODUCT_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//get single product\r\nexport const getDetailProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: getSingleProduct.PRODUCT_DETAIL_REQUEST\r\n        })\r\n        const { data } = await axios.get(`/api/v1/Products/${id}`)\r\n        dispatch({\r\n            type: getSingleProduct.PRODUCT_DETAIL_SUCCESS,\r\n            payload: data.product\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: getSingleProduct.PRODUCT_DETAIL_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getAdminsProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: productConstansts.ADMIN_PRODUCT_REQUEST\r\n        })\r\n        const { data } = await axios.get(`/api/v1//admin/Products`)\r\n        dispatch({\r\n            type: productConstansts.ADMIN_PRODUCT_SUCCESS,\r\n            payload: data.products\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: productConstansts.ADMIN_PRODUCT_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: productConstansts.NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/admin/products/new', productData, config)\r\n\r\n        dispatch({\r\n            type: productConstansts.NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: productConstansts.NEW_PRODUCT_FAILURE,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//clear error\r\nexport const clearError = () => async (dispatch) => {\r\n    dispatch({\r\n        type: productConstansts.CLEAR_ERRORS\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}