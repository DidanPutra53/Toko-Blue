{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{Link}from'react-router-dom';import{MDBDataTable}from'mdbreact';import Loader from'../layout/Loader';import{useAlert}from'react-alert';import{useDispatch,useSelector}from'react-redux';import MetaData from'../layout/MetaData';import{myOrders,clearErrors}from'../../actions/orderAction';import{FaRegEye}from'react-icons/fa';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListOrders=function ListOrders(){var alert=useAlert();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.myOrders;}),loading=_useSelector.loading,error=_useSelector.error,orders=_useSelector.orders;useEffect(function(){dispatch(myOrders());if(error){alert.error(error);dispatch(clearErrors());}},[dispatch,alert,error]);var setOrders=function setOrders(){var data={columns:[{label:'Order ID',field:'id',sort:'asc'},{label:'Num of Items',field:'numOfItems',sort:'asc'},{label:'Amount',field:'amount',sort:'asc'},{label:'Status',field:'status',sort:'asc'},{label:'Actions',field:'actions',sort:'asc'}],rows:[]};orders.forEach(function(order){data.rows.push({id:order._id,numOfItems:order.orderItems.length,amount:\"Rp. \".concat(order.totalPrice),status:order.orderStatus&&String(order.orderStatus).includes('Delivered')?/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:order.orderStatus}):/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:order.orderStatus}),actions:/*#__PURE__*/_jsx(Link,{to:\"/Pesanan/\".concat(order._id),children:/*#__PURE__*/_jsx(FaRegEye,{})})});});return data;};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:'Transaksi Pembelian'}),/*#__PURE__*/_jsxs(\"div\",{className:\"pesanan\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Transaksi Pembelian\"}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsx(MDBDataTable,{data:setOrders(),className:\"px-3\",bordered:true,striped:true,hover:true})]})]});};export default ListOrders;","map":{"version":3,"sources":["C:/Users/coegb/Documents/e-commerce/frontend/src/component/order/ListOrders.js"],"names":["React","Fragment","useEffect","Link","MDBDataTable","Loader","useAlert","useDispatch","useSelector","MetaData","myOrders","clearErrors","FaRegEye","ListOrders","alert","dispatch","state","loading","error","orders","setOrders","data","columns","label","field","sort","rows","forEach","order","push","id","_id","numOfItems","orderItems","length","amount","totalPrice","status","orderStatus","String","includes","color","actions"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport Loader from '../layout/Loader'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MetaData from '../layout/MetaData';\r\nimport { myOrders, clearErrors } from '../../actions/orderAction';\r\nimport { FaRegEye } from 'react-icons/fa'\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, orders } = useSelector(state => state.myOrders)\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders())\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `Rp. ${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/Pesanan/${order._id}`} ><FaRegEye /></Link>\r\n            })\r\n        })\r\n        return data\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Transaksi Pembelian'} />\r\n            <div className=\"pesanan\">\r\n                <h1>Transaksi Pembelian</h1>\r\n                {\r\n                    loading ? <Loader /> : (\r\n                        <MDBDataTable\r\n                            data={setOrders()}\r\n                            className=\"px-3\"\r\n                            bordered\r\n                            striped\r\n                            hover\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders\r\n"]},"metadata":{},"sourceType":"module"}